class a{constructor(){this.videos=["ProjetMajGeneratif.mp4","ProjetMajMTH2.mp4","ProjetMajVarType.mp4","ProjetMajDalcans2.mp4","ProjetLedra.mp4"],this.loadedVideos=new Map,this.totalProgress=0,this.videosLoaded=0}async preloadVideos(){console.log("Starting video preload...");const e=this.videos.map(s=>this.preloadVideo(s));try{return await Promise.all(e),console.log("All videos preloaded successfully!"),this.loadedVideos}catch(s){return console.warn("Some videos failed to preload:",s),this.loadedVideos}}preloadVideo(e){return new Promise((s,d)=>{console.log(`Tentative de chargement de la vidéo: ${e}`);const t=document.createElement("video");t.preload="auto",t.muted=!0,t.playsInline=!0,fetch(e).then(o=>{if(!o.ok)throw console.error(`Erreur HTTP pour ${e}: ${o.status}`),new Error(`HTTP error! status: ${o.status}`);return console.log(`Réponse reçue pour ${e}`),o.blob()}).then(o=>{console.log(`Blob créé pour ${e}, taille: ${o.size} bytes`);const r=URL.createObjectURL(o);t.src=r,this.loadedVideos.set(e,{blobUrl:r,video:t}),this.videosLoaded++,this.totalProgress=this.videosLoaded/this.videos.length*100,console.log(`Progrès: ${this.totalProgress}% - Vidéo chargée: ${e}`),this.updateProgress(),s(t)}).catch(o=>{console.error(`Échec du chargement de ${e}:`,o),d(o)})})}updateProgress(){const e=new CustomEvent("videoPreloadProgress",{detail:{progress:this.totalProgress,videosLoaded:this.videosLoaded,totalVideos:this.videos.length}});window.dispatchEvent(e)}getVideo(e){return this.loadedVideos.get(e)}}const i=new a;export{i as v};
//# sourceMappingURL=video-preloader-BgEkNBjW.js.map
