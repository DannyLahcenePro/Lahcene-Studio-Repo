{"version":3,"file":"main-B_O-L8LT.js","sources":["../../project/node_modules/three/examples/jsm/shaders/CopyShader.js","../../project/node_modules/three/examples/jsm/postprocessing/Pass.js","../../project/node_modules/three/examples/jsm/postprocessing/ShaderPass.js","../../project/node_modules/three/examples/jsm/postprocessing/MaskPass.js","../../project/node_modules/three/examples/jsm/postprocessing/EffectComposer.js","../../project/node_modules/three/examples/jsm/postprocessing/RenderPass.js","../../project/node_modules/three/examples/jsm/shaders/BokehShader.js","../../project/node_modules/three/examples/jsm/postprocessing/BokehPass.js","../../project/js/three-animation.js","../../project/js/main.js"],"sourcesContent":["/**\n * Full-screen textured quad shader\n */\n\nconst CopyShader = {\n\n\tname: 'CopyShader',\n\n\tuniforms: {\n\n\t\t'tDiffuse': { value: null },\n\t\t'opacity': { value: 1.0 }\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\tuniform float opacity;\n\n\t\tuniform sampler2D tDiffuse;\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvec4 texel = texture2D( tDiffuse, vUv );\n\t\t\tgl_FragColor = opacity * texel;\n\n\n\t\t}`\n\n};\n\nexport { CopyShader };\n","import {\n\tBufferGeometry,\n\tFloat32BufferAttribute,\n\tOrthographicCamera,\n\tMesh\n} from 'three';\n\nclass Pass {\n\n\tconstructor() {\n\n\t\tthis.isPass = true;\n\n\t\t// if set to true, the pass is processed by the composer\n\t\tthis.enabled = true;\n\n\t\t// if set to true, the pass indicates to swap read and write buffer after rendering\n\t\tthis.needsSwap = true;\n\n\t\t// if set to true, the pass clears its buffer before rendering\n\t\tthis.clear = false;\n\n\t\t// if set to true, the result of the pass is rendered to screen. This is set automatically by EffectComposer.\n\t\tthis.renderToScreen = false;\n\n\t}\n\n\tsetSize( /* width, height */ ) {}\n\n\trender( /* renderer, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\tconsole.error( 'THREE.Pass: .render() must be implemented in derived pass.' );\n\n\t}\n\n\tdispose() {}\n\n}\n\n// Helper for passes that need to fill the viewport with a single quad.\n\nconst _camera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n// https://github.com/mrdoob/three.js/pull/21358\n\nconst _geometry = new BufferGeometry();\n_geometry.setAttribute( 'position', new Float32BufferAttribute( [ - 1, 3, 0, - 1, - 1, 0, 3, - 1, 0 ], 3 ) );\n_geometry.setAttribute( 'uv', new Float32BufferAttribute( [ 0, 2, 0, 0, 2, 0 ], 2 ) );\n\nclass FullScreenQuad {\n\n\tconstructor( material ) {\n\n\t\tthis._mesh = new Mesh( _geometry, material );\n\n\t}\n\n\tdispose() {\n\n\t\tthis._mesh.geometry.dispose();\n\n\t}\n\n\trender( renderer ) {\n\n\t\trenderer.render( this._mesh, _camera );\n\n\t}\n\n\tget material() {\n\n\t\treturn this._mesh.material;\n\n\t}\n\n\tset material( value ) {\n\n\t\tthis._mesh.material = value;\n\n\t}\n\n}\n\nexport { Pass, FullScreenQuad };\n","import {\n\tShaderMaterial,\n\tUniformsUtils\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\n\nclass ShaderPass extends Pass {\n\n\tconstructor( shader, textureID ) {\n\n\t\tsuper();\n\n\t\tthis.textureID = ( textureID !== undefined ) ? textureID : 'tDiffuse';\n\n\t\tif ( shader instanceof ShaderMaterial ) {\n\n\t\t\tthis.uniforms = shader.uniforms;\n\n\t\t\tthis.material = shader;\n\n\t\t} else if ( shader ) {\n\n\t\t\tthis.uniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t\tthis.material = new ShaderMaterial( {\n\n\t\t\t\tname: ( shader.name !== undefined ) ? shader.name : 'unspecified',\n\t\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\t\tuniforms: this.uniforms,\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.fsQuad = new FullScreenQuad( this.material );\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t}\n\n\t\tthis.fsQuad.material = this.material;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t}\n\n\tdispose() {\n\n\t\tthis.material.dispose();\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { ShaderPass };\n","import { Pass } from './Pass.js';\n\nclass MaskPass extends Pass {\n\n\tconstructor( scene, camera ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.clear = true;\n\t\tthis.needsSwap = false;\n\n\t\tthis.inverse = false;\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst context = renderer.getContext();\n\t\tconst state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tlet writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n}\n\nclass ClearMaskPass extends Pass {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.needsSwap = false;\n\n\t}\n\n\trender( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n}\n\nexport { MaskPass, ClearMaskPass };\n","import {\n\tClock,\n\tHalfFloatType,\n\tNoBlending,\n\tVector2,\n\tWebGLRenderTarget\n} from 'three';\nimport { CopyShader } from '../shaders/CopyShader.js';\nimport { ShaderPass } from './ShaderPass.js';\nimport { MaskPass } from './MaskPass.js';\nimport { ClearMaskPass } from './MaskPass.js';\n\nclass EffectComposer {\n\n\tconstructor( renderer, renderTarget ) {\n\n\t\tthis.renderer = renderer;\n\n\t\tthis._pixelRatio = renderer.getPixelRatio();\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = renderer.getSize( new Vector2() );\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = new WebGLRenderTarget( this._width * this._pixelRatio, this._height * this._pixelRatio, { type: HalfFloatType } );\n\t\t\trenderTarget.texture.name = 'EffectComposer.rt1';\n\n\t\t} else {\n\n\t\t\tthis._width = renderTarget.width;\n\t\t\tthis._height = renderTarget.height;\n\n\t\t}\n\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\t\tthis.renderTarget2.texture.name = 'EffectComposer.rt2';\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t\tthis.renderToScreen = true;\n\n\t\tthis.passes = [];\n\n\t\tthis.copyPass = new ShaderPass( CopyShader );\n\t\tthis.copyPass.material.blending = NoBlending;\n\n\t\tthis.clock = new Clock();\n\n\t}\n\n\tswapBuffers() {\n\n\t\tconst tmp = this.readBuffer;\n\t\tthis.readBuffer = this.writeBuffer;\n\t\tthis.writeBuffer = tmp;\n\n\t}\n\n\taddPass( pass ) {\n\n\t\tthis.passes.push( pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tinsertPass( pass, index ) {\n\n\t\tthis.passes.splice( index, 0, pass );\n\t\tpass.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t}\n\n\tremovePass( pass ) {\n\n\t\tconst index = this.passes.indexOf( pass );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tthis.passes.splice( index, 1 );\n\n\t\t}\n\n\t}\n\n\tisLastEnabledPass( passIndex ) {\n\n\t\tfor ( let i = passIndex + 1; i < this.passes.length; i ++ ) {\n\n\t\t\tif ( this.passes[ i ].enabled ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\trender( deltaTime ) {\n\n\t\t// deltaTime value is in seconds\n\n\t\tif ( deltaTime === undefined ) {\n\n\t\t\tdeltaTime = this.clock.getDelta();\n\n\t\t}\n\n\t\tconst currentRenderTarget = this.renderer.getRenderTarget();\n\n\t\tlet maskActive = false;\n\n\t\tfor ( let i = 0, il = this.passes.length; i < il; i ++ ) {\n\n\t\t\tconst pass = this.passes[ i ];\n\n\t\t\tif ( pass.enabled === false ) continue;\n\n\t\t\tpass.renderToScreen = ( this.renderToScreen && this.isLastEnabledPass( i ) );\n\t\t\tpass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime, maskActive );\n\n\t\t\tif ( pass.needsSwap ) {\n\n\t\t\t\tif ( maskActive ) {\n\n\t\t\t\t\tconst context = this.renderer.getContext();\n\t\t\t\t\tconst stencil = this.renderer.state.buffers.stencil;\n\n\t\t\t\t\t//context.stencilFunc( context.NOTEQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.NOTEQUAL, 1, 0xffffffff );\n\n\t\t\t\t\tthis.copyPass.render( this.renderer, this.writeBuffer, this.readBuffer, deltaTime );\n\n\t\t\t\t\t//context.stencilFunc( context.EQUAL, 1, 0xffffffff );\n\t\t\t\t\tstencil.setFunc( context.EQUAL, 1, 0xffffffff );\n\n\t\t\t\t}\n\n\t\t\t\tthis.swapBuffers();\n\n\t\t\t}\n\n\t\t\tif ( MaskPass !== undefined ) {\n\n\t\t\t\tif ( pass instanceof MaskPass ) {\n\n\t\t\t\t\tmaskActive = true;\n\n\t\t\t\t} else if ( pass instanceof ClearMaskPass ) {\n\n\t\t\t\t\tmaskActive = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.renderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n\treset( renderTarget ) {\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\tconst size = this.renderer.getSize( new Vector2() );\n\t\t\tthis._pixelRatio = this.renderer.getPixelRatio();\n\t\t\tthis._width = size.width;\n\t\t\tthis._height = size.height;\n\n\t\t\trenderTarget = this.renderTarget1.clone();\n\t\t\trenderTarget.setSize( this._width * this._pixelRatio, this._height * this._pixelRatio );\n\n\t\t}\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\t\tthis.renderTarget1 = renderTarget;\n\t\tthis.renderTarget2 = renderTarget.clone();\n\n\t\tthis.writeBuffer = this.renderTarget1;\n\t\tthis.readBuffer = this.renderTarget2;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis._width = width;\n\t\tthis._height = height;\n\n\t\tconst effectiveWidth = this._width * this._pixelRatio;\n\t\tconst effectiveHeight = this._height * this._pixelRatio;\n\n\t\tthis.renderTarget1.setSize( effectiveWidth, effectiveHeight );\n\t\tthis.renderTarget2.setSize( effectiveWidth, effectiveHeight );\n\n\t\tfor ( let i = 0; i < this.passes.length; i ++ ) {\n\n\t\t\tthis.passes[ i ].setSize( effectiveWidth, effectiveHeight );\n\n\t\t}\n\n\t}\n\n\tsetPixelRatio( pixelRatio ) {\n\n\t\tthis._pixelRatio = pixelRatio;\n\n\t\tthis.setSize( this._width, this._height );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.renderTarget1.dispose();\n\t\tthis.renderTarget2.dispose();\n\n\t\tthis.copyPass.dispose();\n\n\t}\n\n}\n\nexport { EffectComposer };\n","import {\n\tColor\n} from 'three';\nimport { Pass } from './Pass.js';\n\nclass RenderPass extends Pass {\n\n\tconstructor( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tthis.overrideMaterial = overrideMaterial;\n\n\t\tthis.clearColor = clearColor;\n\t\tthis.clearAlpha = ( clearAlpha !== undefined ) ? clearAlpha : 0;\n\n\t\tthis.clear = true;\n\t\tthis.clearDepth = false;\n\t\tthis.needsSwap = false;\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tlet oldClearAlpha, oldOverrideMaterial;\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\n\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t}\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\toldClearAlpha = renderer.getClearAlpha();\n\n\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t}\n\n\t\tif ( this.clearDepth ) {\n\n\t\t\trenderer.clearDepth();\n\n\t\t}\n\n\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer );\n\n\t\t// TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\trenderer.render( this.scene, this.camera );\n\n\t\tif ( this.clearColor ) {\n\n\t\t\trenderer.setClearColor( this._oldClearColor, oldClearAlpha );\n\n\t\t}\n\n\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t}\n\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n}\n\nexport { RenderPass };\n","/**\n * Depth-of-field shader with bokeh\n * ported from GLSL shader by Martins Upitis\n * http://artmartinsh.blogspot.com/2010/02/glsl-lens-blur-filter-with-bokeh.html\n */\n\nconst BokehShader = {\n\n\tdefines: {\n\t\t'DEPTH_PACKING': 1,\n\t\t'PERSPECTIVE_CAMERA': 1,\n\t},\n\n\tuniforms: {\n\n\t\t'tColor': { value: null },\n\t\t'tDepth': { value: null },\n\t\t'focus': { value: 1.0 },\n\t\t'aspect': { value: 1.0 },\n\t\t'aperture': { value: 0.025 },\n\t\t'maxblur': { value: 0.01 },\n\t\t'nearClip': { value: 1.0 },\n\t\t'farClip': { value: 1000.0 },\n\n\t},\n\n\tvertexShader: /* glsl */`\n\n\t\tvarying vec2 vUv;\n\n\t\tvoid main() {\n\n\t\t\tvUv = uv;\n\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\n\t\t}`,\n\n\tfragmentShader: /* glsl */`\n\n\t\t#include <common>\n\n\t\tvarying vec2 vUv;\n\n\t\tuniform sampler2D tColor;\n\t\tuniform sampler2D tDepth;\n\n\t\tuniform float maxblur; // max blur amount\n\t\tuniform float aperture; // aperture - bigger values for shallower depth of field\n\n\t\tuniform float nearClip;\n\t\tuniform float farClip;\n\n\t\tuniform float focus;\n\t\tuniform float aspect;\n\n\t\t#include <packing>\n\n\t\tfloat getDepth( const in vec2 screenPosition ) {\n\t\t\t#if DEPTH_PACKING == 1\n\t\t\treturn unpackRGBAToDepth( texture2D( tDepth, screenPosition ) );\n\t\t\t#else\n\t\t\treturn texture2D( tDepth, screenPosition ).x;\n\t\t\t#endif\n\t\t}\n\n\t\tfloat getViewZ( const in float depth ) {\n\t\t\t#if PERSPECTIVE_CAMERA == 1\n\t\t\treturn perspectiveDepthToViewZ( depth, nearClip, farClip );\n\t\t\t#else\n\t\t\treturn orthographicDepthToViewZ( depth, nearClip, farClip );\n\t\t\t#endif\n\t\t}\n\n\n\t\tvoid main() {\n\n\t\t\tvec2 aspectcorrect = vec2( 1.0, aspect );\n\n\t\t\tfloat viewZ = getViewZ( getDepth( vUv ) );\n\n\t\t\tfloat factor = ( focus + viewZ ); // viewZ is <= 0, so this is a difference equation\n\n\t\t\tvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\n\n\t\t\tvec2 dofblur9 = dofblur * 0.9;\n\t\t\tvec2 dofblur7 = dofblur * 0.7;\n\t\t\tvec2 dofblur4 = dofblur * 0.4;\n\n\t\t\tvec4 col = vec4( 0.0 );\n\n\t\t\tcol += texture2D( tColor, vUv.xy );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\n\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\n\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\n\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\n\t\t\tcol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\n\n\t\t\tgl_FragColor = col / 41.0;\n\t\t\tgl_FragColor.a = 1.0;\n\n\t\t}`\n\n};\n\nexport { BokehShader };\n","import {\n\tColor,\n\tHalfFloatType,\n\tMeshDepthMaterial,\n\tNearestFilter,\n\tNoBlending,\n\tRGBADepthPacking,\n\tShaderMaterial,\n\tUniformsUtils,\n\tWebGLRenderTarget\n} from 'three';\nimport { Pass, FullScreenQuad } from './Pass.js';\nimport { BokehShader } from '../shaders/BokehShader.js';\n\n/**\n * Depth-of-field post-process with bokeh shader\n */\n\nclass BokehPass extends Pass {\n\n\tconstructor( scene, camera, params ) {\n\n\t\tsuper();\n\n\t\tthis.scene = scene;\n\t\tthis.camera = camera;\n\n\t\tconst focus = ( params.focus !== undefined ) ? params.focus : 1.0;\n\t\tconst aspect = ( params.aspect !== undefined ) ? params.aspect : camera.aspect;\n\t\tconst aperture = ( params.aperture !== undefined ) ? params.aperture : 0.025;\n\t\tconst maxblur = ( params.maxblur !== undefined ) ? params.maxblur : 1.0;\n\n\t\t// render targets\n\n\t\tthis.renderTargetDepth = new WebGLRenderTarget( 1, 1, { // will be resized later\n\t\t\tminFilter: NearestFilter,\n\t\t\tmagFilter: NearestFilter,\n\t\t\ttype: HalfFloatType\n\t\t} );\n\n\t\tthis.renderTargetDepth.texture.name = 'BokehPass.depth';\n\n\t\t// depth material\n\n\t\tthis.materialDepth = new MeshDepthMaterial();\n\t\tthis.materialDepth.depthPacking = RGBADepthPacking;\n\t\tthis.materialDepth.blending = NoBlending;\n\n\t\t// bokeh material\n\n\t\tconst bokehShader = BokehShader;\n\t\tconst bokehUniforms = UniformsUtils.clone( bokehShader.uniforms );\n\n\t\tbokehUniforms[ 'tDepth' ].value = this.renderTargetDepth.texture;\n\n\t\tbokehUniforms[ 'focus' ].value = focus;\n\t\tbokehUniforms[ 'aspect' ].value = aspect;\n\t\tbokehUniforms[ 'aperture' ].value = aperture;\n\t\tbokehUniforms[ 'maxblur' ].value = maxblur;\n\t\tbokehUniforms[ 'nearClip' ].value = camera.near;\n\t\tbokehUniforms[ 'farClip' ].value = camera.far;\n\n\t\tthis.materialBokeh = new ShaderMaterial( {\n\t\t\tdefines: Object.assign( {}, bokehShader.defines ),\n\t\t\tuniforms: bokehUniforms,\n\t\t\tvertexShader: bokehShader.vertexShader,\n\t\t\tfragmentShader: bokehShader.fragmentShader\n\t\t} );\n\n\t\tthis.uniforms = bokehUniforms;\n\n\t\tthis.fsQuad = new FullScreenQuad( this.materialBokeh );\n\n\t\tthis._oldClearColor = new Color();\n\n\t}\n\n\trender( renderer, writeBuffer, readBuffer/*, deltaTime, maskActive*/ ) {\n\n\t\t// Render depth into texture\n\n\t\tthis.scene.overrideMaterial = this.materialDepth;\n\n\t\trenderer.getClearColor( this._oldClearColor );\n\t\tconst oldClearAlpha = renderer.getClearAlpha();\n\t\tconst oldAutoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\trenderer.setClearColor( 0xffffff );\n\t\trenderer.setClearAlpha( 1.0 );\n\t\trenderer.setRenderTarget( this.renderTargetDepth );\n\t\trenderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// Render bokeh composite\n\n\t\tthis.uniforms[ 'tColor' ].value = readBuffer.texture;\n\t\tthis.uniforms[ 'nearClip' ].value = this.camera.near;\n\t\tthis.uniforms[ 'farClip' ].value = this.camera.far;\n\n\t\tif ( this.renderToScreen ) {\n\n\t\t\trenderer.setRenderTarget( null );\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t} else {\n\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\trenderer.clear();\n\t\t\tthis.fsQuad.render( renderer );\n\n\t\t}\n\n\t\tthis.scene.overrideMaterial = null;\n\t\trenderer.setClearColor( this._oldClearColor );\n\t\trenderer.setClearAlpha( oldClearAlpha );\n\t\trenderer.autoClear = oldAutoClear;\n\n\t}\n\n\tsetSize( width, height ) {\n\n\t\tthis.renderTargetDepth.setSize( width, height );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.renderTargetDepth.dispose();\n\n\t\tthis.materialDepth.dispose();\n\t\tthis.materialBokeh.dispose();\n\n\t\tthis.fsQuad.dispose();\n\n\t}\n\n}\n\nexport { BokehPass };\n","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';\nimport { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass.js';\n\nclass ThreeAnimation {\n    constructor() {\n        // Configuration\n        this.config = {\n            grid: {\n                spacing: 25,\n                pointSize: 1.5,\n                minPointSize: 0,\n                maxPointSize: 2,\n                depthAmplitude: 10\n            },\n            bokeh: {\n                focus: 329,\n                aperture: 0.0000,\n                maxblur: 0.15\n            },\n            mouse: {\n                interactionDistance: 150,\n                displacementMax: 40\n            },\n            colors: {\n                touchdesigner: {\n                        close: 0xF3599C,\n                        medium: 0x3726CF\n                    },\n                    design: {\n                        close: 0xFF6F29,\n                        medium: 0x931B2B\n                    },\n                    development: {\n                        close: 0x987AFF,\n                        medium: 0x203CAC\n                    }\n                },\n                videoPlane: {\n                    width: 300,\n                    height: 400,\n                    position: {\n                        x: window.innerWidth * 0.1,\n                        y: 0,\n                        z: 35\n                    }\n                }\n            };\n\n            // Three.js setup\n            this.scene = new THREE.Scene();\n            this.camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n            this.renderer = new THREE.WebGLRenderer({ alpha: true });\n            this.gridPoints = [];\n            this.currentCategory = 'touchdesigner';\n            this.mouse = new THREE.Vector2();\n            this.mouseInScene = new THREE.Vector3();\n            this.waterMovementOffset = 50;\n            this.isTransitioning = false;\n            this.fadeOutAnimation = null;\n\n            // Ajouter les propriétés pour la transition de couleur\n            this.targetColors = {\n                medium: new THREE.Color(this.config.colors[this.currentCategory].medium),\n                close: new THREE.Color(this.config.colors[this.currentCategory].close)\n            };\n            this.currentColors = {\n                medium: new THREE.Color(this.config.colors[this.currentCategory].medium),\n                close: new THREE.Color(this.config.colors[this.currentCategory].close)\n            };\n            this.colorTransitionSpeed = 0.05; // Vitesse de transition (0-1)\n\n            // Post-processing\n            this.composer = null;\n            this.bokehPass = null;\n\n            // Propriétés pour le plan vidéo\n            this.videoTexture = null;\n            this.videoMaterial = null;\n            this.videoPlane = null;\n            this.currentVideo = null;\n\n            this.init();\n            // Démarrer avec les points invisibles et les faire apparaître\n            this.gridPoints.forEach(point => {\n                point.scale.set(0, 0, 0);\n            });\n            this.fadeInPoints(600);\n        }\n\n        init() {\n            // Setup renderer\n            this.renderer.setSize(window.innerWidth, window.innerHeight);\n            this.renderer.setClearColor(0x000000, 0);\n            this.renderer.outputColorSpace = THREE.LinearSRGBColorSpace;\n            document.querySelector('main').appendChild(this.renderer.domElement);\n            this.camera.position.z = 385;\n\n            // Create grid\n            this.createGrid();\n\n            // Setup post-processing\n            this.setupPostProcessing();\n\n            // Event listeners\n            window.addEventListener('resize', () => this.onResize());\n            window.addEventListener('mousemove', (e) => this.onMouseMove(e));\n\n            // Start animation\n            this.animate();\n\n            // Créer le plan vidéo\n            this.createVideoPlane();\n        }\n\n        setupPostProcessing() {\n            this.composer = new EffectComposer(this.renderer);\n\n            // Add render pass\n            const renderPass = new RenderPass(this.scene, this.camera);\n            this.composer.addPass(renderPass);\n\n            // Add bokeh pass with enhanced parameters\n            this.bokehPass = new BokehPass(this.scene, this.camera, {\n                focus: this.config.bokeh.focus,\n                aperture: this.config.bokeh.aperture,\n                maxblur: this.config.bokeh.maxblur,\n                width: window.innerWidth,\n                height: window.innerHeight,\n                resolution: new THREE.Vector2(1024, 1024),\n                rings: 3,\n                samples: 2,\n                showFocus: false\n            });\n            this.composer.addPass(this.bokehPass);\n        }\n\n        createGrid() {\n            const gridWidth = Math.floor(window.innerWidth / this.config.grid.spacing);\n            const gridHeight = Math.floor(window.innerHeight / this.config.grid.spacing);\n\n            for (let i = 0; i < gridWidth; i++) {\n                for (let j = 0; j < gridHeight; j++) {\n                    const x = (i - gridWidth / 2) * this.config.grid.spacing;\n                    const y = (j - gridHeight / 2) * this.config.grid.spacing;\n\n                    const geometry = new THREE.SphereGeometry(this.config.grid.pointSize, 8, 8);\n                    const material = new THREE.MeshBasicMaterial({\n                        color: this.config.colors[this.currentCategory].medium,\n                        transparent: true,\n                        opacity: 1,\n                        blending: THREE.NormalBlending\n                    });\n\n                    const point = new THREE.Mesh(geometry, material);\n                    point.position.set(x, y, 0);\n                    point.originalPosition = new THREE.Vector3(x, y, 0);\n\n                    this.gridPoints.push(point);\n                    this.scene.add(point);\n                }\n            }\n        }\n\n        updateColors(category) {\n            this.currentCategory = category;\n            const colors = this.config.colors[category];\n\n            // Mettre à jour les couleurs cibles\n            this.targetColors.medium.setHex(colors.medium);\n            this.targetColors.close.setHex(colors.close);\n\n            // Mettre à jour les couleurs du shader seulement si le matériel est initialisé\n            if (this.videoMaterial && this.videoMaterial.uniforms && \n                this.videoMaterial.uniforms.colorClose && \n                this.videoMaterial.uniforms.colorMedium) {\n                this.videoMaterial.uniforms.colorClose.value.setHex(colors.close);\n                this.videoMaterial.uniforms.colorMedium.value.setHex(colors.medium);\n            }\n        }\n\n        updatePoints() {\n            this.waterMovementOffset += 0.007;\n\n            // Interpoler les couleurs actuelles vers les couleurs cibles\n            this.currentColors.medium.lerp(this.targetColors.medium, this.colorTransitionSpeed);\n            this.currentColors.close.lerp(this.targetColors.close, this.colorTransitionSpeed);\n\n            let averageZ = 0;\n\n            // Mettre à jour les points de la grille principale\n            this.gridPoints.forEach(point => {\n                // Water movement avec composante Z\n                const waterX = Math.sin(point.originalPosition.x * 0.02 + this.waterMovementOffset) * 5;\n                const waterY = Math.cos(point.originalPosition.y * 0.02 + this.waterMovementOffset) * 5;\n                const waterZ = Math.sin(point.originalPosition.x * 0.01 + point.originalPosition.y * 0.01 + this.waterMovementOffset)\n                    * this.config.grid.depthAmplitude;\n                const waterMovement = new THREE.Vector3(waterX, waterY, waterZ);\n\n                // Mouse interaction\n                const distanceToMouse = point.position.distanceTo(this.mouseInScene);\n                let mouseDisplacement = new THREE.Vector3();\n\n                if (distanceToMouse < this.config.mouse.interactionDistance) {\n                    const direction = point.position.clone().sub(this.mouseInScene).normalize();\n                    const strength = 1 - (distanceToMouse / this.config.mouse.interactionDistance);\n                    mouseDisplacement = direction.multiplyScalar(strength * this.config.mouse.displacementMax);\n\n                    // Transition de couleur avec les couleurs interpolées\n                    const color = new THREE.Color().copy(this.currentColors.medium);\n                    color.lerp(this.currentColors.close, strength);\n                    point.material.color.copy(color);\n                } else {\n                    point.material.color.copy(this.currentColors.medium);\n                }\n\n                // Facteur de transition pour le fadeOut\n                const transitionFactor = this.isTransitioning ? point.scale.x : 1;\n\n                // Update position avec le facteur de transition\n                const targetPosition = point.originalPosition.clone()\n                    .add(waterMovement.multiplyScalar(transitionFactor))\n                    .add(mouseDisplacement.multiplyScalar(transitionFactor));\n                point.position.lerp(targetPosition, 0.5);\n\n                // Calculer la taille du point en fonction de sa position Z\n                const normalizedZ = (point.position.z + this.config.grid.depthAmplitude) / (2 * this.config.grid.depthAmplitude);\n                const size = this.config.grid.minPointSize + \n                    (this.config.grid.maxPointSize - this.config.grid.minPointSize) * normalizedZ;\n\n                // Ne pas mettre à jour la scale ici car elle est gérée par fadeOutPoints\n                if (!this.isTransitioning) {\n                    point.scale.setScalar(size);\n                }\n                point.material.opacity = 0.85 + normalizedZ * 0.15;\n\n                averageZ += point.position.z;\n            });\n\n            // Mettre à jour le focus du bokeh\n            if (this.bokehPass) {\n                averageZ /= this.gridPoints.length;\n                const targetFocus = this.camera.position.z + averageZ;\n                this.bokehPass.uniforms['focus'].value += (targetFocus - this.bokehPass.uniforms['focus'].value) * 0.05;\n            }\n        }\n\n        onMouseMove(event) {\n            this.mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n            this.mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n            // Mettre à jour la position de la souris pour le shader\n            if (this.videoMaterial && this.videoMaterial.uniforms) {\n                this.videoMaterial.uniforms.mousePosition.value.set(\n                    event.clientX / window.innerWidth,\n                    1.0 - (event.clientY / window.innerHeight)\n                );\n                \n                // Augmenter progressivement l'influence de la souris\n                const targetInfluence = 1.0;\n                const currentInfluence = this.videoMaterial.uniforms.mouseInfluence.value;\n                this.videoMaterial.uniforms.mouseInfluence.value += (targetInfluence - currentInfluence) * 0.1;\n            }\n\n            const vector = new THREE.Vector3(this.mouse.x, this.mouse.y, 0.5);\n            vector.unproject(this.camera);\n            vector.sub(this.camera.position).normalize();\n            const distance = -this.camera.position.z / vector.z;\n            this.mouseInScene.copy(this.camera.position).add(vector.multiplyScalar(distance));\n        }\n\n        onResize() {\n            const width = window.innerWidth;\n            const height = window.innerHeight;\n\n            this.camera.aspect = width / height;\n            this.camera.updateProjectionMatrix();\n            this.renderer.setSize(width, height);\n\n            // Update composer size\n            if (this.composer) {\n                this.composer.setSize(width, height);\n            }\n\n            // Recreate grid\n            this.gridPoints.forEach(point => this.scene.remove(point));\n            this.gridPoints = [];\n            this.createGrid();\n        }\n\n        animate() {\n            // Animation normale des points (toujours active)\n            this.waterMovementOffset += 0.01;\n            this.updatePoints();\n\n            // Mise à jour du temps pour l'animation du plan vidéo\n            if (this.videoMaterial && this.videoMaterial.uniforms) {\n                this.videoMaterial.uniforms.time.value += 0.01;\n            }\n\n            // Rendu de la scène\n            this.composer.render();\n            requestAnimationFrame(this.animate.bind(this));\n        }\n\n        createVideoPlane() {\n            // Créer une texture vidéo vide initialement\n            const video = document.createElement('video');\n            video.autoplay = true;\n            video.loop = true;\n            video.muted = true;\n            video.playsInline = true;\n            video.crossOrigin = 'anonymous';\n            \n            this.videoTexture = new THREE.VideoTexture(video);\n            this.videoTexture.minFilter = THREE.LinearFilter;\n            this.videoTexture.magFilter = THREE.LinearFilter;\n            this.videoTexture.format = THREE.RGBAFormat;\n            this.videoTexture.colorSpace = THREE.SRGBColorSpace;\n            this.videoTexture.generateMipmaps = false;\n\n            // Configuration de la grille de contrôle\n            const segmentsX = 20;\n            const segmentsY = 25;\n            const width = this.config.videoPlane.width;\n            const height = this.config.videoPlane.height;\n\n            // Créer une géométrie plus détaillée pour la déformation fluide\n            const planeGeometry = new THREE.PlaneGeometry(\n                width,\n                height,\n                segmentsX,\n                segmentsY\n            );\n\n            // Créer un shader personnalisé pour l'effet de tuiles\n            const customMaterial = new THREE.ShaderMaterial({\n                uniforms: {\n                    videoTexture: { value: this.videoTexture },\n                    time: { value: 0.0 },\n                    tileSize: { value: new THREE.Vector2(20.0, 20.0) }, // Taille des tuiles\n                    mousePosition: { value: new THREE.Vector2(0.5, 0.5) },\n                    mouseInfluence: { value: 500.0 },\n                    displacementIntensity: { value: 75.0 } // Intensité du déplacement\n                },\n                vertexShader: `\n                    varying vec2 vUv;\n                    varying float vDisplacement;\n                    \n                    uniform float time;\n                    uniform vec2 tileSize;\n                    uniform vec2 mousePosition;\n                    uniform float mouseInfluence;\n                    uniform float displacementIntensity;\n                    \n                    void main() {\n                        vUv = uv;\n                        \n                        // Calculer la position de la tuile\n                        vec2 tilePosition = floor(vUv * tileSize) / tileSize;\n                        \n                        // Distance à la souris\n                        float mouseDistance = length(vUv - mousePosition);\n                        float mouseEffect = (1.0 - smoothstep(0.05, 0.25, mouseDistance)) * mouseInfluence;\n                        \n                        // Effet de vague basé sur le temps et la position (amplitude réduite)\n                        float waveX = sin(position.x * 0.02 + time * 2.0) * 3.0;\n                        float waveY = cos(position.y * 0.02 + time * 2.0) * 3.0;\n                        float waveZ = sin(position.x * 0.01 + position.y * 0.01 + time * 2.0) * 3.0;\n                        \n                        // Déplacement basé sur la position de la tuile et les vagues\n                        float displacement = sin(tilePosition.x * 10.0 + time) * \n                                          cos(tilePosition.y * 10.0 + time) * \n                                          displacementIntensity * mouseEffect;\n                        \n                        // Appliquer le déplacement et les vagues\n                        vec3 newPosition = position;\n                        newPosition.x += waveX;\n                        newPosition.y += waveY;\n                        newPosition.z += displacement + waveZ;\n                        \n                        vDisplacement = displacement;\n                        \n                        gl_Position = projectionMatrix * modelViewMatrix * vec4(newPosition, 1.0);\n                    }\n                `,\n                fragmentShader: `\n                    uniform sampler2D videoTexture;\n                    varying vec2 vUv;\n                    varying float vDisplacement;\n                    \n                    void main() {\n                        // Force de l'aberration basée sur le déplacement\n                        float aberrationStrength = abs(vDisplacement) * 0.003;\n                        \n                        // Décalage des canaux RGB\n                        vec2 redOffset = vUv + vec2(aberrationStrength, 0.0);\n                        vec2 greenOffset = vUv;\n                        vec2 blueOffset = vUv - vec2(aberrationStrength, 0.0);\n                        \n                        // Échantillonner la texture pour chaque canal\n                        float r = texture2D(videoTexture, redOffset).r;\n                        float g = texture2D(videoTexture, greenOffset).g;\n                        float b = texture2D(videoTexture, blueOffset).b;\n                        float a = texture2D(videoTexture, vUv).a;\n                        \n                        // Combiner les canaux avec un effet de luminosité\n                        float brightness = 1.0 + abs(vDisplacement) * 0.05;\n                        vec3 color = vec3(r, g, b) * brightness;\n                        \n                        gl_FragColor = vec4(color, a);\n                    }\n                `,\n                transparent: true,\n                blending: THREE.AdditiveBlending,\n                side: THREE.DoubleSide\n            });\n\n            this.videoMaterial = customMaterial;\n\n            // Créer le plan vidéo principal\n            this.videoPlane = new THREE.Mesh(planeGeometry, this.videoMaterial);\n            this.videoPlane.position.set(\n                this.config.videoPlane.position.x,\n                this.config.videoPlane.position.y,\n                this.config.videoPlane.position.z\n            );\n            this.scene.add(this.videoPlane);\n\n            // Créer les points de contrôle invisibles\n            this.controlPoints = [];\n            const controlGeometry = new THREE.SphereGeometry(2);\n            const controlMaterial = new THREE.MeshBasicMaterial({\n                color: 0xffffff,\n                transparent: true,\n                opacity: 0\n            });\n\n            // Stocker les positions originales des vertices pour la déformation\n            this.originalVertices = planeGeometry.attributes.position.array.slice();\n\n            // Créer une grille de points de contrôle plus espacée\n            const controlSpacingX = width / (segmentsX / 2);\n            const controlSpacingY = height / (segmentsY / 2);\n\n            for (let i = 0; i <= segmentsX / 2; i++) {\n                for (let j = 0; j <= segmentsY / 2; j++) {\n                    const x = (i * controlSpacingX) - (width / 2) + this.config.videoPlane.position.x;\n                    const y = (j * controlSpacingY) - (height / 2) + this.config.videoPlane.position.y;\n                    const z = this.config.videoPlane.position.z;\n\n                    const controlPoint = new THREE.Mesh(controlGeometry, controlMaterial);\n                    controlPoint.position.set(x, y, z);\n                    controlPoint.originalPosition = new THREE.Vector3(x, y, z);\n                    \n                    this.controlPoints.push(controlPoint);\n                    this.scene.add(controlPoint);\n                }\n            }\n\n            this.currentVideo = video;\n        }\n\n        updateVideoTexture(videoSrc) {\n            if (!this.videoPlane || !this.videoMaterial) return;\n            if (this.isTransitioning) return;\n            this.isTransitioning = true;\n\n            if (this.currentVideo) {\n                this.currentVideo.pause();\n            }\n\n            // Changer directement la source vidéo\n            this.currentVideo.src = videoSrc;\n            this.currentVideo.onloadeddata = () => {\n                this.currentVideo.play().then(() => {\n                    this.isTransitioning = false;\n                }).catch(error => {\n                    console.error('Erreur de lecture vidéo:', error);\n                    this.isTransitioning = false;\n                });\n            };\n\n            this.currentVideo.onerror = () => {\n                console.error('Erreur de chargement vidéo');\n                this.isTransitioning = false;\n            };\n        }\n\n        fadeOutPoints(duration = 600) {\n            console.log('fadeOutPoints anim');\n            if (this.isTransitioning) return;\n            this.isTransitioning = true;\n        \n            const startTime = performance.now();\n            const initialScales = this.gridPoints.map(point => point.scale.x);\n        \n            const animate = (currentTime) => {\n                const elapsed = currentTime - startTime;\n                const progress = Math.min(elapsed / duration, 1);\n        \n                // New easing function for a dramatically different curve\n                const easeInExpo = progress === 0 ? 0 : Math.pow(2, 10 * (progress - 1));\n        \n                this.gridPoints.forEach((point, index) => {\n                    const scale = initialScales[index] * (1 - easeInExpo);\n                    point.scale.set(scale, scale, scale);\n                });\n        \n                if (progress < 1) {\n                    this.fadeOutAnimation = requestAnimationFrame(animate);\n                }\n            };\n        \n            this.fadeOutAnimation = requestAnimationFrame(animate);\n        }\n\n        fadeInPoints(duration = 600) {\n            console.log('fadeInPoints anim');\n            if (this.isTransitioning) return;\n            this.isTransitioning = true;\n\n            const startTime = performance.now();\n            const targetScales = this.gridPoints.map(point => {\n                // Calculer la taille cible basée sur la position Z\n                const normalizedZ = (point.position.z + this.config.grid.depthAmplitude) / (2 * this.config.grid.depthAmplitude);\n                return this.config.grid.minPointSize + \n                    (this.config.grid.maxPointSize - this.config.grid.minPointSize) * normalizedZ;\n            });\n\n            const animate = (currentTime) => {\n                const elapsed = currentTime - startTime;\n                const progress = Math.min(elapsed / duration, 1);\n                \n                // Même fonction d'easing que fadeOut mais inversée\n                const easeInCubic = Math.pow(progress, 3);\n                \n                this.gridPoints.forEach((point, index) => {\n                    const scale = targetScales[index] * easeInCubic;\n                    point.scale.set(scale, scale, scale);\n                });\n\n                if (progress < 1) {\n                    this.fadeInAnimation = requestAnimationFrame(animate);\n                } else {\n                    this.isTransitioning = false;\n                }\n            };\n\n            this.fadeInAnimation = requestAnimationFrame(animate);\n        }\n    }\n\n    // Export instance\n    const threeAnimation = new ThreeAnimation();\nexport default threeAnimation; ","import threeAnimation from './three-animation.js';\n\n// L'animation démarre automatiquement car elle est initialisée dans three-animation.js\nwindow.addEventListener('beforeunload', () => {\n    // Cleanup si nécessaire\n    if (threeAnimation) {\n        // Supprimer les event listeners\n        window.removeEventListener('resize', threeAnimation.onResize);\n        window.removeEventListener('mousemove', threeAnimation.onMouseMove);\n        \n        // Nettoyer la scène\n        threeAnimation.gridPoints.forEach(point => {\n            point.geometry.dispose();\n            point.material.dispose();\n        });\n        \n        // Supprimer le canvas\n        const canvas = document.querySelector('canvas');\n        if (canvas) {\n            canvas.remove();\n        }\n    }\n});\n\nconst transitionTime = 700;\nconst fadeOutDuration = 700; // Durée de l'animation de disparition\n\n// Configuration des éléments par page\nconst pageConfig = {\n    'index.html': {\n        top: 'header',\n        center: '.container',\n        bottom: 'footer'\n    },\n    'projects.html': {\n        top: 'header',\n        center: '.menu-projects-content',\n        bottom: 'footer'\n    },\n    'about.html': {\n        top: 'header',\n        center: '.about-container',\n        bottom: 'footer'\n    },\n    'contact.html': {\n        top: 'header',\n        center: '.contact-container',\n        bottom: 'footer'\n    }\n};\n\n// Fonction pour obtenir la configuration de la page actuelle\nfunction getCurrentPageConfig() {\n    const path = window.location.pathname;\n    const page = path.substring(path.lastIndexOf('/') + 1) || 'index.html';\n    return pageConfig[page];\n}\n\n// Initialiser les éléments dès que possible\nfunction initializeElements() {\n    const config = getCurrentPageConfig();\n    if (!config) return;\n\n    const isExternalEntry = !document.referrer.includes(window.location.host);\n\n    if (isExternalEntry) {\n        // Pour une entrée externe, tout est initialement invisible\n        const elements = {\n            top: document.querySelector(config.top),\n            center: document.querySelector(config.center),\n            bottom: document.querySelector(config.bottom)\n        };\n\n        Object.values(elements).forEach(el => {\n            if (el) {\n                el.style.opacity = '0';\n                el.classList.add('fade-initial');\n            }\n        });\n    } else {\n        // Pour la navigation interne, seul le contenu central est invisible\n        const center = document.querySelector(config.center);\n        if (center) {\n            center.classList.add('fade-initial');\n        }\n    }\n}\n\n// Appeler l'initialisation immédiatement\ninitializeElements();\n\n// Animation d'apparition\nfunction fadeInUi() {\n    const config = getCurrentPageConfig();\n    if (!config) return;\n\n    const isExternalEntry = !document.referrer.includes(window.location.host);\n\n    const elements = {\n        top: document.querySelector(config.top),\n        center: document.querySelector(config.center),\n        bottom: document.querySelector(config.bottom)\n    };\n\n    // Préparer les éléments pour l'animation\n    Object.values(elements).forEach(el => {\n        if (el) {\n            el.classList.add('fade-transition');\n            el.style.opacity = '0';\n            el.style.transform = 'translateY(20px)';\n        }\n    });\n\n    if (isExternalEntry) {\n        // Pour une entrée externe, animation progressive\n        // Header et ses enfants\n        setTimeout(() => {\n            if (elements.top) {\n                elements.top.style.opacity = '1';\n                elements.top.style.transform = 'translateY(0)';\n                elements.top.classList.remove('fade-initial');\n\n                // Animer les enfants du header avec un délai\n                const headerLinks = elements.top.querySelectorAll('a');\n                headerLinks.forEach((link, index) => {\n                    setTimeout(() => {\n                        link.style.opacity = '1';\n                        link.style.transform = 'translateY(0)';\n                    }, index * 100); // 100ms de délai entre chaque lien\n                });\n            }\n        }, 800);\n        \n        // Contenu central et ses enfants\n        setTimeout(() => {\n            if (elements.center) {\n                elements.center.style.opacity = '1';\n                elements.center.style.transform = 'translateY(0)';\n                elements.center.classList.remove('fade-initial');\n\n                // Animer les enfants selon la page\n                const bentoItems = elements.center.querySelectorAll('.bento-item');\n                if (bentoItems.length > 0) {\n                    // Si nous sommes sur la page about avec le bento-grid\n                    bentoItems.forEach((item, index) => {\n                        setTimeout(() => {\n                            item.style.opacity = '1';\n                            item.style.transform = 'translateY(0)';\n                        }, index * 150 + 200); // 150ms de délai entre chaque item, commençant 200ms après le parent\n                    });\n                } else {\n                    // Pour les autres pages\n                    const children = elements.center.children;\n                    Array.from(children).forEach((child, index) => {\n                        setTimeout(() => {\n                            child.style.opacity = '1';\n                            child.style.transform = 'translateY(0)';\n                        }, index * 150); // 150ms de délai entre chaque enfant\n                    });\n                }\n            }\n        }, 1200);\n\n        // Footer\n        setTimeout(() => {\n            if (elements.bottom) {\n                elements.bottom.style.opacity = '1';\n                elements.bottom.style.transform = 'translateY(0)';\n                elements.bottom.classList.remove('fade-initial');\n            }\n        }, 1600);\n    } else {\n        // Pour la navigation interne\n        if (elements.top) {\n            elements.top.style.opacity = '1';\n            elements.top.style.transform = 'translateY(0)';\n            elements.top.classList.remove('fade-initial');\n        }\n        if (elements.bottom) {\n            elements.bottom.style.opacity = '1';\n            elements.bottom.style.transform = 'translateY(0)';\n            elements.bottom.classList.remove('fade-initial');\n        }\n\n        // Animer uniquement le contenu central et ses enfants\n        if (elements.center) {\n            setTimeout(() => {\n                elements.center.style.opacity = '1';\n                elements.center.style.transform = 'translateY(0)';\n                elements.center.classList.remove('fade-initial');\n\n                // Animer les enfants avec un délai\n                const bentoItems = elements.center.querySelectorAll('.bento-item');\n                if (bentoItems.length > 0) {\n                    // Si nous sommes sur la page about avec le bento-grid\n                    bentoItems.forEach((item, index) => {\n                        setTimeout(() => {\n                            item.style.opacity = '1';\n                            item.style.transform = 'translateY(0)';\n                        }, index * 150 + 200); // 150ms de délai entre chaque item, commençant 200ms après le parent\n                    });\n                } else {\n                    // Pour les autres pages\n                    const children = elements.center.children;\n                    Array.from(children).forEach((child, index) => {\n                        setTimeout(() => {\n                            child.style.opacity = '1';\n                            child.style.transform = 'translateY(0)';\n                        }, index * 150 + 100); // 150ms de délai entre chaque enfant, commençant 100ms après le parent\n                    });\n                }\n            }, 100);\n        }\n    }\n}\n\n// Animation de disparition\nfunction fadeOutUi() {\n    const config = getCurrentPageConfig();\n    if (!config) return;\n\n    // On ne fait disparaître que le contenu central, pas le header ni le footer\n    const center = document.querySelector(config.center);\n    if (center) {\n        center.classList.add('fade-transition');\n        center.offsetHeight; // Force un reflow\n        center.style.opacity = '0';\n        center.style.transform = 'translateY(20px)';\n        center.classList.add('fade-initial');\n    }\n}\n\n// Attendre que le DOM soit complètement chargé\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Ajouter un délai avant de lancer l'animation d'apparition\n    setTimeout(() => {\n        fadeInUi();\n    }, 500); // Délai de 500ms avant le début de l'animation\n\n    // Gérer les clics sur les liens\n    document.querySelectorAll('a[href]').forEach(link => {\n        link.addEventListener('click', function(e) {\n            // Ignorer les liens externes, ancres, mailto et tel\n            if (\n                this.getAttribute('target') === '_blank' || \n                this.getAttribute('href').startsWith('#') ||\n                this.getAttribute('href').startsWith('mailto:') ||\n                this.getAttribute('href').startsWith('tel:')\n            ) {\n                return;\n            }\n\n            e.preventDefault();\n            const destination = this.getAttribute('href');\n\n            // Lancer l'animation de disparition\n            threeAnimation.fadeOutPoints(fadeOutDuration);\n            fadeOutUi();\n            \n            // Changer de page après le délai\n            setTimeout(() => {\n                window.location.href = destination;\n            }, transitionTime);\n        });\n    });\n});"],"names":["CopyShader","Pass","_camera","OrthographicCamera","_geometry","BufferGeometry","Float32BufferAttribute","FullScreenQuad","material","Mesh","renderer","value","ShaderPass","shader","textureID","ShaderMaterial","UniformsUtils","writeBuffer","readBuffer","MaskPass","scene","camera","context","state","writeValue","clearValue","ClearMaskPass","EffectComposer","renderTarget","size","Vector2","WebGLRenderTarget","HalfFloatType","NoBlending","Clock","tmp","pass","index","passIndex","i","deltaTime","currentRenderTarget","maskActive","il","stencil","width","height","effectiveWidth","effectiveHeight","pixelRatio","RenderPass","overrideMaterial","clearColor","clearAlpha","Color","oldAutoClear","oldClearAlpha","oldOverrideMaterial","BokehShader","BokehPass","params","focus","aspect","aperture","maxblur","NearestFilter","MeshDepthMaterial","RGBADepthPacking","bokehShader","bokehUniforms","ThreeAnimation","THREE.Scene","THREE.PerspectiveCamera","THREE.WebGLRenderer","THREE.Vector2","THREE.Vector3","THREE.Color","point","THREE.LinearSRGBColorSpace","renderPass","gridWidth","gridHeight","j","x","y","geometry","THREE.SphereGeometry","THREE.MeshBasicMaterial","THREE.NormalBlending","THREE.Mesh","category","colors","averageZ","waterX","waterY","waterZ","waterMovement","distanceToMouse","mouseDisplacement","direction","strength","color","transitionFactor","targetPosition","normalizedZ","targetFocus","event","targetInfluence","currentInfluence","vector","distance","video","THREE.VideoTexture","THREE.LinearFilter","THREE.RGBAFormat","THREE.SRGBColorSpace","segmentsX","segmentsY","planeGeometry","THREE.PlaneGeometry","customMaterial","THREE.ShaderMaterial","THREE.AdditiveBlending","THREE.DoubleSide","controlGeometry","controlMaterial","controlSpacingX","controlSpacingY","z","controlPoint","videoSrc","error","duration","startTime","initialScales","animate","currentTime","elapsed","progress","easeInExpo","scale","targetScales","easeInCubic","threeAnimation","canvas","transitionTime","fadeOutDuration","pageConfig","getCurrentPageConfig","path","page","initializeElements","config","elements","el","center","fadeInUi","isExternalEntry","link","bentoItems","item","children","child","fadeOutUi","destination"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}