class a{constructor(){this.videos=["/media/videos/ProjetMajGeneratif.mp4","/media/videos/ProjetMajMTH2.mp4","/media/videos/ProjetMajVarType.mp4","/media/videos/ProjetMajDalcans2.mp4","/media/videos/ProjetLedra.mp4"],this.loadedVideos=new Map,this.totalProgress=0,this.videosLoaded=0}async preloadVideos(){console.log("Starting video preload...");const e=this.videos.map(t=>this.preloadVideo(t));try{return await Promise.all(e),console.log("All videos preloaded successfully!"),this.loadedVideos}catch(t){return console.warn("Some videos failed to preload:",t),this.loadedVideos}}preloadVideo(e){return new Promise((t,d)=>{console.log(`Tentative de chargement de la vidéo: ${e}`);const s=document.createElement("video");s.preload="auto",s.muted=!0,s.playsInline=!0,fetch(e).then(o=>{if(!o.ok)throw console.error(`Erreur HTTP pour ${e}: ${o.status}`),new Error(`HTTP error! status: ${o.status}`);return console.log(`Réponse reçue pour ${e}`),o.blob()}).then(o=>{console.log(`Blob créé pour ${e}, taille: ${o.size} bytes`);const r=URL.createObjectURL(o);s.src=r,this.loadedVideos.set(e,{blobUrl:r,video:s}),this.videosLoaded++,this.totalProgress=this.videosLoaded/this.videos.length*100,console.log(`Progrès: ${this.totalProgress}% - Vidéo chargée: ${e}`),this.updateProgress(),t(s)}).catch(o=>{console.error(`Échec du chargement de ${e}:`,o),d(o)})})}updateProgress(){const e=new CustomEvent("videoPreloadProgress",{detail:{progress:this.totalProgress,videosLoaded:this.videosLoaded,totalVideos:this.videos.length}});window.dispatchEvent(e)}getVideo(e){return this.loadedVideos.get(e)}}const l=new a;export{l as v};
//# sourceMappingURL=video-preloader-Cm1oYsQj.js.map
